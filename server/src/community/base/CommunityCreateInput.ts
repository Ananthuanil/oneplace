/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommunityActivityCreateNestedManyWithoutCommunitiesInput } from "./CommunityActivityCreateNestedManyWithoutCommunitiesInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { UserCreateNestedManyWithoutCommunitiesInput } from "./UserCreateNestedManyWithoutCommunitiesInput";
@InputType()
class CommunityCreateInput {
  @ApiProperty({
    required: false,
    type: () => CommunityActivityCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => CommunityActivityCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => CommunityActivityCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  communityActivities?: CommunityActivityCreateNestedManyWithoutCommunitiesInput;

  @ApiProperty({
    required: true,
    type: () => UserCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  communityLeads?: UserCreateNestedManyWithoutCommunitiesInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutCommunitiesInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutCommunitiesInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutCommunitiesInput, {
    nullable: true,
  })
  users?: UserCreateNestedManyWithoutCommunitiesInput;
}
export { CommunityCreateInput };
